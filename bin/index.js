// Generated by LiveScript 1.6.0
var fs, path, colors, readline, chat, cfgfile, secret, e, query, lc, loading, rl;
fs = require('fs');
path = require('path');
colors = require('@plotdb/colors');
readline = require('readline');
chat = require('./chat');
cfgfile = path.join(process.env.HOME, ".ssh/openai/secret.json");
try {
  if (!fs.existsSync(cfgfile)) {
    throw new Error("expect " + cfgfile + " with `{apiKey}` object.");
  }
  secret = JSON.parse(fs.readFileSync(cfgfile).toString());
  if (!secret.apiKey) {
    throw new Error("expect " + cfgfile + " with `{apiKey}` object.");
  }
} catch (e$) {
  e = e$;
  console.error(e.toString().red);
  process.exit(1);
}
query = function(msg){
  var opt;
  opt = {
    key: secret.apiKey,
    max_tokens: 300,
    messages: [
      {
        role: 'system',
        content: "用戶現在正透過終端機指令介面與您對話，請避免輸出不適合的排版文字，但可用跳脫碼上色。\n主要會是程式或指令問題，請用正體中文回覆。"
      }, {
        role: 'user',
        content: msg
      }
    ]
  };
  return chat(opt).then(function(ret){
    return ret.message;
  });
};
lc = {
  msg: [],
  write: true,
  loader: {
    char: ['|', '/', '-', '\\'],
    idx: 0
  }
};
loading = function(v){
  v == null && (v = true);
  if (v && lc.loader.hdr) {
    return;
  }
  if (!v && !lc.loader.hdr) {
    return;
  }
  if (!v) {
    readline.moveCursor(process.stdout, -1, 0);
    clearInterval(lc.loader.hdr);
    return lc.loader.hdr = 0;
  }
  return lc.loader.hdr = setInterval(function(){
    readline.moveCursor(process.stdout, -1, 0);
    process.stdout.write(lc.loader.char[lc.loader.idx] + "");
    return lc.loader.idx = (lc.loader.idx + 1) % lc.loader.char.length;
  }, 100);
};
rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});
rl.on('line', function(line){
  var msg;
  line == null && (line = "");
  line = line.trim();
  if (line === '') {
    msg = lc.msg.join('\n');
    lc.msg.splice(0);
    if (!msg) {
      console.log("[ERR] No message to send.".red);
      process.stdout.write("[YOU] ".green);
      return;
    }
    lc.write = false;
    process.stdout.write("[GPT]  ".yellow);
    loading(true);
    query(msg).then(function(ret){
      loading(false);
      console.log(ret.brightWhite);
      lc.write = true;
      return process.stdout.write("[YOU] ".green);
    });
  }
  if (!lc.write) {
    return;
  }
  lc.msg.push(line);
  return process.stdout.write("[YOU] ".green);
});
rl.input.on('keypress', function(char, key){});
rl._writeToOutput = function(stw){
  if (lc.write) {
    return rl.output.write(stw);
  }
};
console.log("[Cmdline GPT] 'qq' or Ctrl-C to quit, empty line to send.".cyan);
process.stdout.write("[YOU] ".green);